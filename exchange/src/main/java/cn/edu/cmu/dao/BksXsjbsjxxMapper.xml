<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.edu.cmu.dao.BksXsjbsjxxMapper" >
  <resultMap id="BaseResultMap" type="cn.edu.cmu.domain.BksXsjbsjxx" >
    <constructor >
      <arg column="XH" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="XM" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="XMPY" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="CYM" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="XBM" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="CSRQ" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="CSDM" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="JG" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="MZM" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="GJDQM" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="SFZJLXM" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="SFZJH" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="HYZKM" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="GATQWM" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="ZZMMM" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="JKZKM" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="XYZJM" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="XXM" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="SFZJYXQ" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="SFLXS" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="YWXM" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="SFDSZN" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    XH, XM, XMPY, CYM, XBM, CSRQ, CSDM, JG, MZM, GJDQM, SFZJLXM, SFZJH, HYZKM, GATQWM, 
    ZZMMM, JKZKM, XYZJM, XXM, SFZJYXQ, SFLXS, YWXM, SFDSZN
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.edu.cmu.domain.BksXsjbsjxxParams" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from V_BKS_XSJBSJXX
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="cn.edu.cmu.domain.BksXsjbsjxxParams" >
    delete from V_BKS_XSJBSJXX
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.edu.cmu.domain.BksXsjbsjxx" >
    insert into V_BKS_XSJBSJXX (XH, XM, XMPY, 
      CYM, XBM, CSRQ, CSDM, 
      JG, MZM, GJDQM, SFZJLXM, 
      SFZJH, HYZKM, GATQWM, 
      ZZMMM, JKZKM, XYZJM, 
      XXM, SFZJYXQ, SFLXS, 
      YWXM, SFDSZN)
    values (#{xh,jdbcType=VARCHAR}, #{xm,jdbcType=VARCHAR}, #{xmpy,jdbcType=VARCHAR}, 
      #{cym,jdbcType=VARCHAR}, #{xbm,jdbcType=VARCHAR}, #{csrq,jdbcType=VARCHAR}, #{csdm,jdbcType=VARCHAR}, 
      #{jg,jdbcType=VARCHAR}, #{mzm,jdbcType=VARCHAR}, #{gjdqm,jdbcType=VARCHAR}, #{sfzjlxm,jdbcType=VARCHAR}, 
      #{sfzjh,jdbcType=VARCHAR}, #{hyzkm,jdbcType=VARCHAR}, #{gatqwm,jdbcType=VARCHAR}, 
      #{zzmmm,jdbcType=VARCHAR}, #{jkzkm,jdbcType=VARCHAR}, #{xyzjm,jdbcType=VARCHAR}, 
      #{xxm,jdbcType=VARCHAR}, #{sfzjyxq,jdbcType=VARCHAR}, #{sflxs,jdbcType=VARCHAR}, 
      #{ywxm,jdbcType=VARCHAR}, #{sfdszn,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.cmu.domain.BksXsjbsjxx" >
    insert into V_BKS_XSJBSJXX
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="xh != null" >
        XH,
      </if>
      <if test="xm != null" >
        XM,
      </if>
      <if test="xmpy != null" >
        XMPY,
      </if>
      <if test="cym != null" >
        CYM,
      </if>
      <if test="xbm != null" >
        XBM,
      </if>
      <if test="csrq != null" >
        CSRQ,
      </if>
      <if test="csdm != null" >
        CSDM,
      </if>
      <if test="jg != null" >
        JG,
      </if>
      <if test="mzm != null" >
        MZM,
      </if>
      <if test="gjdqm != null" >
        GJDQM,
      </if>
      <if test="sfzjlxm != null" >
        SFZJLXM,
      </if>
      <if test="sfzjh != null" >
        SFZJH,
      </if>
      <if test="hyzkm != null" >
        HYZKM,
      </if>
      <if test="gatqwm != null" >
        GATQWM,
      </if>
      <if test="zzmmm != null" >
        ZZMMM,
      </if>
      <if test="jkzkm != null" >
        JKZKM,
      </if>
      <if test="xyzjm != null" >
        XYZJM,
      </if>
      <if test="xxm != null" >
        XXM,
      </if>
      <if test="sfzjyxq != null" >
        SFZJYXQ,
      </if>
      <if test="sflxs != null" >
        SFLXS,
      </if>
      <if test="ywxm != null" >
        YWXM,
      </if>
      <if test="sfdszn != null" >
        SFDSZN,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="xh != null" >
        #{xh,jdbcType=VARCHAR},
      </if>
      <if test="xm != null" >
        #{xm,jdbcType=VARCHAR},
      </if>
      <if test="xmpy != null" >
        #{xmpy,jdbcType=VARCHAR},
      </if>
      <if test="cym != null" >
        #{cym,jdbcType=VARCHAR},
      </if>
      <if test="xbm != null" >
        #{xbm,jdbcType=VARCHAR},
      </if>
      <if test="csrq != null" >
        #{csrq,jdbcType=VARCHAR},
      </if>
      <if test="csdm != null" >
        #{csdm,jdbcType=VARCHAR},
      </if>
      <if test="jg != null" >
        #{jg,jdbcType=VARCHAR},
      </if>
      <if test="mzm != null" >
        #{mzm,jdbcType=VARCHAR},
      </if>
      <if test="gjdqm != null" >
        #{gjdqm,jdbcType=VARCHAR},
      </if>
      <if test="sfzjlxm != null" >
        #{sfzjlxm,jdbcType=VARCHAR},
      </if>
      <if test="sfzjh != null" >
        #{sfzjh,jdbcType=VARCHAR},
      </if>
      <if test="hyzkm != null" >
        #{hyzkm,jdbcType=VARCHAR},
      </if>
      <if test="gatqwm != null" >
        #{gatqwm,jdbcType=VARCHAR},
      </if>
      <if test="zzmmm != null" >
        #{zzmmm,jdbcType=VARCHAR},
      </if>
      <if test="jkzkm != null" >
        #{jkzkm,jdbcType=VARCHAR},
      </if>
      <if test="xyzjm != null" >
        #{xyzjm,jdbcType=VARCHAR},
      </if>
      <if test="xxm != null" >
        #{xxm,jdbcType=VARCHAR},
      </if>
      <if test="sfzjyxq != null" >
        #{sfzjyxq,jdbcType=VARCHAR},
      </if>
      <if test="sflxs != null" >
        #{sflxs,jdbcType=VARCHAR},
      </if>
      <if test="ywxm != null" >
        #{ywxm,jdbcType=VARCHAR},
      </if>
      <if test="sfdszn != null" >
        #{sfdszn,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.edu.cmu.domain.BksXsjbsjxxParams" resultType="java.lang.Integer" >
    select count(*) from V_BKS_XSJBSJXX
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update V_BKS_XSJBSJXX
    <set >
      <if test="record.xh != null" >
        XH = #{record.xh,jdbcType=VARCHAR},
      </if>
      <if test="record.xm != null" >
        XM = #{record.xm,jdbcType=VARCHAR},
      </if>
      <if test="record.xmpy != null" >
        XMPY = #{record.xmpy,jdbcType=VARCHAR},
      </if>
      <if test="record.cym != null" >
        CYM = #{record.cym,jdbcType=VARCHAR},
      </if>
      <if test="record.xbm != null" >
        XBM = #{record.xbm,jdbcType=VARCHAR},
      </if>
      <if test="record.csrq != null" >
        CSRQ = #{record.csrq,jdbcType=VARCHAR},
      </if>
      <if test="record.csdm != null" >
        CSDM = #{record.csdm,jdbcType=VARCHAR},
      </if>
      <if test="record.jg != null" >
        JG = #{record.jg,jdbcType=VARCHAR},
      </if>
      <if test="record.mzm != null" >
        MZM = #{record.mzm,jdbcType=VARCHAR},
      </if>
      <if test="record.gjdqm != null" >
        GJDQM = #{record.gjdqm,jdbcType=VARCHAR},
      </if>
      <if test="record.sfzjlxm != null" >
        SFZJLXM = #{record.sfzjlxm,jdbcType=VARCHAR},
      </if>
      <if test="record.sfzjh != null" >
        SFZJH = #{record.sfzjh,jdbcType=VARCHAR},
      </if>
      <if test="record.hyzkm != null" >
        HYZKM = #{record.hyzkm,jdbcType=VARCHAR},
      </if>
      <if test="record.gatqwm != null" >
        GATQWM = #{record.gatqwm,jdbcType=VARCHAR},
      </if>
      <if test="record.zzmmm != null" >
        ZZMMM = #{record.zzmmm,jdbcType=VARCHAR},
      </if>
      <if test="record.jkzkm != null" >
        JKZKM = #{record.jkzkm,jdbcType=VARCHAR},
      </if>
      <if test="record.xyzjm != null" >
        XYZJM = #{record.xyzjm,jdbcType=VARCHAR},
      </if>
      <if test="record.xxm != null" >
        XXM = #{record.xxm,jdbcType=VARCHAR},
      </if>
      <if test="record.sfzjyxq != null" >
        SFZJYXQ = #{record.sfzjyxq,jdbcType=VARCHAR},
      </if>
      <if test="record.sflxs != null" >
        SFLXS = #{record.sflxs,jdbcType=VARCHAR},
      </if>
      <if test="record.ywxm != null" >
        YWXM = #{record.ywxm,jdbcType=VARCHAR},
      </if>
      <if test="record.sfdszn != null" >
        SFDSZN = #{record.sfdszn,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update V_BKS_XSJBSJXX
    set XH = #{record.xh,jdbcType=VARCHAR},
      XM = #{record.xm,jdbcType=VARCHAR},
      XMPY = #{record.xmpy,jdbcType=VARCHAR},
      CYM = #{record.cym,jdbcType=VARCHAR},
      XBM = #{record.xbm,jdbcType=VARCHAR},
      CSRQ = #{record.csrq,jdbcType=VARCHAR},
      CSDM = #{record.csdm,jdbcType=VARCHAR},
      JG = #{record.jg,jdbcType=VARCHAR},
      MZM = #{record.mzm,jdbcType=VARCHAR},
      GJDQM = #{record.gjdqm,jdbcType=VARCHAR},
      SFZJLXM = #{record.sfzjlxm,jdbcType=VARCHAR},
      SFZJH = #{record.sfzjh,jdbcType=VARCHAR},
      HYZKM = #{record.hyzkm,jdbcType=VARCHAR},
      GATQWM = #{record.gatqwm,jdbcType=VARCHAR},
      ZZMMM = #{record.zzmmm,jdbcType=VARCHAR},
      JKZKM = #{record.jkzkm,jdbcType=VARCHAR},
      XYZJM = #{record.xyzjm,jdbcType=VARCHAR},
      XXM = #{record.xxm,jdbcType=VARCHAR},
      SFZJYXQ = #{record.sfzjyxq,jdbcType=VARCHAR},
      SFLXS = #{record.sflxs,jdbcType=VARCHAR},
      YWXM = #{record.ywxm,jdbcType=VARCHAR},
      SFDSZN = #{record.sfdszn,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>